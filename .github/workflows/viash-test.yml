name: viash test

on:
  pull_request:
  push:
    branches: [ '**' ]

jobs:


  # phase 1
  list_components:
    env:
      s3_bucket: s3://openpipelines-data/
    runs-on: ubuntu-latest
    if: "(!contains(github.event.head_commit.message, 'ci skip'))"
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    - name: Fetch viash
      run: |
        bin/init -n
        tree .
        bin/viash -h

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v34.6.1
      with:
        separator: ";"
        diff_relative: true

    # store component locations
    - name: Set matrix to only run tests for components that had their config or resources changed.
      id: set_matrix
      run: |
        IFS=$';' read -a changed_files <<< "${{ steps.changed-files.outputs.all_changed_files }}"
        echo "Changed files: "${changed_files[*]}""
        readarray -t components < <(bin/viash ns list -p docker --format json | jq -c '[ .[] | 
                                                                                          (.info.config | capture("^(?<dir>.*\/)").dir) as $dir | 
                                                                                          { "name": .functionality.name, 
                                                                                            "config": .info.config, 
                                                                                            "resources": ([.info.config] + 
                                                                                                          ([.functionality.resources[].path?, 
                                                                                                            .functionality.test_resources[].path?] | 
                                                                                                            map($dir + .)
                                                                                                            )
                                                                                                          )
                                                                                          }
                                                                                        ][]')
        declare -a result_array_matrix=()
        for component in "${components[@]}"; do
          readarray -t resources < <(jq -cr '.resources[]' <<< "$component")
          for resource_rel_path in "${resources[@]}"; do
            resource_project_path=$(realpath --relative-to="$GITHUB_WORKSPACE" "$resource_rel_path")
            echo "Checking path $resource_project_path"
            if [[ " ${changed_files[*]} " =~ " ${resource_project_path} " || "$GITHUB_REF" == "refs/heads/main" || "${{ contains(github.event.head_commit.message, 'ci force') }}" == "true" ]]; then
              result_array_matrix+="$component"
              break
            fi
          done
        done
        json=$(jq -cs '.' <<< "${result_array_matrix[*]}")
        echo "matrix=$json" >> $GITHUB_OUTPUT

  # phase 2
  viash_test:
    needs: list_components
    if: ${{ needs.list_components.outputs.matrix != '[]' && needs.list_components.outputs.matrix != '' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.list_components.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Fetch viash
      run: |
        bin/init -n
        bin/viash -h

    - name: Run test
      timeout-minutes: 30
      run: |
        bin/viash test -p docker ${{ matrix.component.config }} \
         -c '.functionality.requirements.cpus := 2' \
         -c '.functionality.requirements.memory := "5gb"'

